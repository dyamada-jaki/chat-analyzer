name: 🚀 Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

jobs:
  # リリース前テスト
  pre-release-tests:
    name: 🧪 Pre-Release Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest
        
    - name: 📚 Install dependencies
      working-directory: ./backend
      run: pnpm install --frozen-lockfile
      
    - name: 🏗️ Build backend
      working-directory: ./backend
      run: pnpm build
      
    - name: 🧪 Run all tests
      working-directory: ./backend
      run: pnpm test --run

  # Chrome拡張機能パッケージ作成
  build-extension:
    name: 📦 Build Chrome Extension
    runs-on: ubuntu-latest
    needs: pre-release-tests
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Create extension package
      run: |
        cd chrome-extension
        
        # バージョン情報を取得
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        
        echo "Building Chrome Extension version: $VERSION"
        
        # manifest.jsonのバージョン更新
        node -e "
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('manifest.json', 'utf8'));
          manifest.version = '$VERSION'.replace('v', '');
          fs.writeFileSync('manifest.json', JSON.stringify(manifest, null, 2));
        "
        
        # 拡張機能ファイルをZIPにパッケージ
        zip -r "../chat-analyzer-extension-$VERSION.zip" . \
          -x "*.git*" "node_modules/*" "*.md" "*.log"
        
        echo "✅ Extension packaged: chat-analyzer-extension-$VERSION.zip"
        
    - name: 📤 Upload extension artifact
      uses: actions/upload-artifact@v4
      with:
        name: chrome-extension
        path: chat-analyzer-extension-*.zip

  # バックエンドビルド
  build-backend:
    name: 🏗️ Build Backend
    runs-on: ubuntu-latest
    needs: pre-release-tests
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: 📦 Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest
        
    - name: 📚 Install dependencies
      working-directory: ./backend
      run: pnpm install --frozen-lockfile --prod
      
    - name: 🏗️ Build backend
      working-directory: ./backend
      run: pnpm build
      
    - name: 📦 Create backend package
      run: |
        cd backend
        
        # バージョン情報を取得
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        
        echo "Building Backend version: $VERSION"
        
        # 本番用ファイルのみをパッケージ
        tar -czf "../chat-analyzer-backend-$VERSION.tar.gz" \
          dist/ \
          package.json \
          pnpm-lock.yaml \
          --exclude="node_modules" \
          --exclude="tests" \
          --exclude="*.test.*"
        
        echo "✅ Backend packaged: chat-analyzer-backend-$VERSION.tar.gz"
        
    - name: 📤 Upload backend artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend
        path: chat-analyzer-backend-*.tar.gz

  # GitHubリリース作成
  create-release:
    name: 🎉 Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-extension, build-backend]
    permissions:
      contents: write
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📥 Download artifacts
      uses: actions/download-artifact@v4
      
    - name: 🎉 Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        name: Chat Analyzer ${{ github.event.inputs.version || github.ref_name }}
        body: |
          ## 🎉 Chat Analyzer Release ${{ github.event.inputs.version || github.ref_name }}
          
          ### 🚀 Features
          - Google Chat感情分析Chrome拡張機能
          - Gemini AI統合バックエンド
          - リアルタイム感情分析
          - 統計情報とデータ可視化
          
          ### 📦 Downloads
          - **Chrome Extension**: `chat-analyzer-extension-*.zip`
          - **Backend Server**: `chat-analyzer-backend-*.tar.gz`
          
          ### 🔧 Installation
          
          #### Chrome Extension
          1. `chat-analyzer-extension-*.zip`をダウンロード
          2. Chromeで`chrome://extensions/`を開く
          3. 開発者モードを有効化
          4. 「パッケージ化されていない拡張機能を読み込む」でフォルダを選択
          
          #### Backend Server
          1. `chat-analyzer-backend-*.tar.gz`をダウンロード・展開
          2. `pnpm install`で依存関係をインストール
          3. `.env`ファイルでGemini APIキーを設定
          4. `pnpm start`でサーバー起動
          
          ### 🧪 Testing
          - ✅ 23テスト全通過
          - ✅ セキュリティ監査完了
          - ✅ Chrome Web Store準拠
          
          ### 📋 Changelog
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
        files: |
          chrome-extension/chat-analyzer-extension-*.zip
          backend/chat-analyzer-backend-*.tar.gz
        draft: false
        prerelease: false
        
    - name: 🎊 Release Summary
      run: |
        echo "🎉 Release Created Successfully!"
        echo "Version: ${{ github.event.inputs.version || github.ref_name }}"
        echo "Chrome Extension: ✅"
        echo "Backend Server: ✅"
        echo "GitHub Release: ✅"
        echo ""
        echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.event.inputs.version || github.ref_name }}"
